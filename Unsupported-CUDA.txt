blas_cublas.cu.outputdata.txt:/tmp/blas_cublas.cu-89de56.hip:77:25: warning: CUDA identifier is unsupported in HIP.
blas_cublas.cu.outputdata.txt-        cublasStatus_t error = cublasCgetrfBatched(handle, n, A_array, n, dipiv, dinfo_array, batch);
blas_cublas.cu.outputdata.txt-                               ^
blas_cublas.cu.outputdata.txt:/tmp/blas_cublas.cu-89de56.hip:92:10: warning: CUDA identifier is unsupported in HIP.
blas_cublas.cu.outputdata.txt-        error = cublasCgetriBatched(handle, n, (const C**)A_array, n, dipiv, Ainv_array, n, dinfo_array, batch);
blas_cublas.cu.outputdata.txt-                ^
--
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:39:33: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    if ( ptr_attr.memoryType == cudaMemoryTypeDevice ) {
blas_magma.cu.outputdata.txt-                                ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:50:41: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    }  else if ( ptr_attr.memoryType == cudaMemoryTypeHost ) {
blas_magma.cu.outputdata.txt-                                        ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:82:33: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    if ( ptr_attr.memoryType == cudaMemoryTypeDevice ) {
blas_magma.cu.outputdata.txt-                                ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:84:41: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    }  else if ( ptr_attr.memoryType == cudaMemoryTypeHost ) {
blas_magma.cu.outputdata.txt-                                        ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:141:33: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    if ( ptr_attr.memoryType == cudaMemoryTypeDevice )
blas_magma.cu.outputdata.txt-                                ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:165:41: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    }  else if ( ptr_attr.memoryType == cudaMemoryTypeHost ) {
blas_magma.cu.outputdata.txt-                                        ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:209:33: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    if ( ptr_attr.memoryType == cudaMemoryTypeDevice ) {
blas_magma.cu.outputdata.txt-                                ^
blas_magma.cu.outputdata.txt:/tmp/blas_magma.cu-bec312.hip:211:41: warning: CUDA identifier is unsupported in HIP.
blas_magma.cu.outputdata.txt-    }  else if ( ptr_attr.memoryType == cudaMemoryTypeHost ) {
blas_magma.cu.outputdata.txt-                                        ^
--
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:249:5: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-#if CUDA_VERSION >= 8000  // this was introduced with CUDA 8
comm_common.cpp.outputdata.txt-    ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:251:6: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-            cudaDeviceGetP2PAttribute(&accessRank[0], cudaDevP2PAttrPerformanceRank, gpuid, neighbor_gpuid);
comm_common.cpp.outputdata.txt-            ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:251:48: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-            cudaDeviceGetP2PAttribute(&accessRank[0], cudaDevP2PAttrPerformanceRank, gpuid, neighbor_gpuid);
comm_common.cpp.outputdata.txt-                                                      ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:252:6: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-            cudaDeviceGetP2PAttribute(&accessRank[1], cudaDevP2PAttrPerformanceRank, neighbor_gpuid, gpuid);
comm_common.cpp.outputdata.txt-            ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:252:48: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-            cudaDeviceGetP2PAttribute(&accessRank[1], cudaDevP2PAttrPerformanceRank, neighbor_gpuid, gpuid);
comm_common.cpp.outputdata.txt-                                                      ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:448:3: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-  CUpointer_attribute attributes[2] = {CU_POINTER_ATTRIBUTE_MEMORY_TYPE};
comm_common.cpp.outputdata.txt-  ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:448:40: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-  CUpointer_attribute attributes[2] = {CU_POINTER_ATTRIBUTE_MEMORY_TYPE};
comm_common.cpp.outputdata.txt-                                       ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:449:18: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-  CUresult err = cuPointerGetAttributes(1, attributes, attrdata, (CUdeviceptr)buffer);
comm_common.cpp.outputdata.txt-                 ^
comm_common.cpp.outputdata.txt:/tmp/comm_common.cpp-ff218c.hip:452:5: warning: CUDA identifier is unsupported in HIP.
comm_common.cpp.outputdata.txt-    cuGetErrorName(err, &str);
comm_common.cpp.outputdata.txt-    ^
--
dslash_quda.cu.outputdata.txt:/tmp/dslash_quda.cu-11c968.hip:89:5: warning: CUDA identifier is unsupported in HIP.
dslash_quda.cu.outputdata.txt-#if CUDA_VERSION >= 8000
dslash_quda.cu.outputdata.txt-    ^
dslash_quda.cu.outputdata.txt:/tmp/dslash_quda.cu-11c968.hip:112:5: warning: CUDA identifier is unsupported in HIP.
dslash_quda.cu.outputdata.txt-#if CUDA_VERSION >= 8000
dslash_quda.cu.outputdata.txt-    ^
dslash_quda.cu.outputdata.txt:/tmp/dslash_quda.cu-11c968.hip:148:5: warning: CUDA identifier is unsupported in HIP.
dslash_quda.cu.outputdata.txt-#if CUDA_VERSION >= 8000
dslash_quda.cu.outputdata.txt-    ^
--
interface_quda.cpp.outputdata.txt:/tmp/interface_quda.cpp-814f1f.hip:522:28: warning: CUDA identifier is unsupported in HIP.
interface_quda.cpp.outputdata.txt-#if defined(MULTI_GPU) && (CUDA_VERSION == 4000)
interface_quda.cpp.outputdata.txt-                           ^
interface_quda.cpp.outputdata.txt:/tmp/interface_quda.cpp-814f1f.hip:604:7: warning: CUDA identifier is unsupported in HIP.
interface_quda.cpp.outputdata.txt-#if ((CUDA_VERSION >= 6000) && defined NUMA_NVML)
interface_quda.cpp.outputdata.txt-      ^
--
malloc.cpp.outputdata.txt:/tmp/malloc.cpp-60d51a.hip:142:6: warning: CUDA identifier is unsupported in HIP.
malloc.cpp.outputdata.txt-#if (CUDA_VERSION > 4000) && 0 // we need to manually align to page boundaries to allow us to bind a texture to mapped memory
malloc.cpp.outputdata.txt-     ^
malloc.cpp.outputdata.txt:/tmp/malloc.cpp-60d51a.hip:323:23: warning: CUDA identifier is unsupported in HIP.
malloc.cpp.outputdata.txt-    cudaError_t err = cudaMallocManaged(&ptr, size);
malloc.cpp.outputdata.txt-                      ^
malloc.cpp.outputdata.txt:/tmp/malloc.cpp-60d51a.hip:460:5: warning: CUDA identifier is unsupported in HIP.
malloc.cpp.outputdata.txt-    CUpointer_attribute attribute[] = { CU_POINTER_ATTRIBUTE_MEMORY_TYPE };
malloc.cpp.outputdata.txt-    ^
malloc.cpp.outputdata.txt:/tmp/malloc.cpp-60d51a.hip:460:41: warning: CUDA identifier is unsupported in HIP.
malloc.cpp.outputdata.txt-    CUpointer_attribute attribute[] = { CU_POINTER_ATTRIBUTE_MEMORY_TYPE };
malloc.cpp.outputdata.txt-                                        ^
malloc.cpp.outputdata.txt:/tmp/malloc.cpp-60d51a.hip:463:22: warning: CUDA identifier is unsupported in HIP.
malloc.cpp.outputdata.txt-    CUresult error = cuPointerGetAttributes(1, attribute, data, reinterpret_cast<CUdeviceptr>(ptr));
malloc.cpp.outputdata.txt-                     ^
malloc.cpp.outputdata.txt:/tmp/malloc.cpp-60d51a.hip:466:7: warning: CUDA identifier is unsupported in HIP.
malloc.cpp.outputdata.txt-      cuGetErrorString(error, &string);
malloc.cpp.outputdata.txt-      ^
--
tune.cpp.outputdata.txt:/tmp/tune.cpp-709e2a.hip:790:3: warning: CUDA identifier is unsupported in HIP.
tune.cpp.outputdata.txt-                cuGetErrorString(tunable.jitifyError(), &str);
tune.cpp.outputdata.txt-                ^
--
unitarize_force_quda.cu.outputdata.txt:/tmp/unitarize_force_quda.cu-8f78f8.hip:16:27: warning: CUDA identifier is unsupported in HIP.
unitarize_force_quda.cu.outputdata.txt-#if defined(__APPLE__) && CUDA_VERSION >= 7000 && CUDA_VERSION < 7050
unitarize_force_quda.cu.outputdata.txt-                          ^
unitarize_force_quda.cu.outputdata.txt:/tmp/unitarize_force_quda.cu-8f78f8.hip:16:51: warning: CUDA identifier is unsupported in HIP.
unitarize_force_quda.cu.outputdata.txt-#if defined(__APPLE__) && CUDA_VERSION >= 7000 && CUDA_VERSION < 7050
unitarize_force_quda.cu.outputdata.txt-                                                  ^
