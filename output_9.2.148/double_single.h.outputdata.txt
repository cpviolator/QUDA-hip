find: unknown predicate `-cuda-path=/sw/summit/cuda/9.2.148'
/tmp/double_single.h-3de66f.hip:41:73: error: use of overloaded operator '+=' is ambiguous (with operand types 'doublesingle' and 'const doublesingle')
  __host__ __device__ inline void operator+=(const doublesingle2 &b) {x += b.x; y += b.y;}
                                                                      ~ ^  ~~~
/tmp/double_single.h-3de66f.hip:18:35: note: candidate function
  __host__ __device__ inline void operator+=(const doublesingle &b) { dsadd(this->a, this->a, b.a); }
                                  ^
/tmp/double_single.h-3de66f.hip:30:41: note: candidate function
__host__ __device__ inline doublesingle operator+=(doublesingle &a, const doublesingle &b)
                                        ^
/tmp/double_single.h-3de66f.hip:41:83: error: use of overloaded operator '+=' is ambiguous (with operand types 'doublesingle' and 'const doublesingle')
  __host__ __device__ inline void operator+=(const doublesingle2 &b) {x += b.x; y += b.y;}
                                                                                ~ ^  ~~~
/tmp/double_single.h-3de66f.hip:18:35: note: candidate function
  __host__ __device__ inline void operator+=(const doublesingle &b) { dsadd(this->a, this->a, b.a); }
                                  ^
/tmp/double_single.h-3de66f.hip:30:41: note: candidate function
__host__ __device__ inline doublesingle operator+=(doublesingle &a, const doublesingle &b)
                                        ^
/tmp/double_single.h-3de66f.hip:52:73: error: use of overloaded operator '+=' is ambiguous (with operand types 'doublesingle' and 'const doublesingle')
  __host__ __device__ inline void operator+=(const doublesingle3 &b) {x += b.x; y += b.y; z+= b.z;}
                                                                      ~ ^  ~~~
/tmp/double_single.h-3de66f.hip:18:35: note: candidate function
  __host__ __device__ inline void operator+=(const doublesingle &b) { dsadd(this->a, this->a, b.a); }
                                  ^
/tmp/double_single.h-3de66f.hip:30:41: note: candidate function
__host__ __device__ inline doublesingle operator+=(doublesingle &a, const doublesingle &b)
                                        ^
/tmp/double_single.h-3de66f.hip:52:83: error: use of overloaded operator '+=' is ambiguous (with operand types 'doublesingle' and 'const doublesingle')
  __host__ __device__ inline void operator+=(const doublesingle3 &b) {x += b.x; y += b.y; z+= b.z;}
                                                                                ~ ^  ~~~
/tmp/double_single.h-3de66f.hip:18:35: note: candidate function
  __host__ __device__ inline void operator+=(const doublesingle &b) { dsadd(this->a, this->a, b.a); }
                                  ^
/tmp/double_single.h-3de66f.hip:30:41: note: candidate function
__host__ __device__ inline doublesingle operator+=(doublesingle &a, const doublesingle &b)
                                        ^
/tmp/double_single.h-3de66f.hip:52:92: error: use of overloaded operator '+=' is ambiguous (with operand types 'doublesingle' and 'const doublesingle')
  __host__ __device__ inline void operator+=(const doublesingle3 &b) {x += b.x; y += b.y; z+= b.z;}
                                                                                          ~^  ~~~
/tmp/double_single.h-3de66f.hip:18:35: note: candidate function
  __host__ __device__ inline void operator+=(const doublesingle &b) { dsadd(this->a, this->a, b.a); }
                                  ^
/tmp/double_single.h-3de66f.hip:30:41: note: candidate function
__host__ __device__ inline doublesingle operator+=(doublesingle &a, const doublesingle &b)
                                        ^
5 errors generated when compiling for host.
Error while processing /tmp/double_single.h-3de66f.hip.

[HIPIFY] info: file './quda/include/double_single.h' statistics:

  ERROR: Statistics is invalid due to failed hipification.

  CONVERTED refs count: 0
  UNCONVERTED refs count: 0
  CONVERSION %: 0
  REPLACED bytes: 0
  TOTAL bytes: 2275
  CHANGED lines of code: 1
  TOTAL lines of code: 56
  CODE CHANGED (in bytes) %: 0
  CODE CHANGED (in lines) %: 2
  TIME ELAPSED s: 0.22
